)
),
fileInput("file1", "Choose CSV File",
accept = c(
"text/csv",
"text/comma-separated-values,text/plain",
".csv")
),
tags$hr(),
#checkboxInput("header", "Header", TRUE),
#accept = c(".csv", ".xls",".xlsx")),
verbatimTextOutput("nsc_import_summary")
)
server <- function(input, output, session) {
output$nsc_import_summary <- renderPrint({
# input$file1 will be NULL initially. After the user selects
# and uploads a file, it will be a data frame with 'name',
# 'size', 'type', and 'datapath' columns. The 'datapath'
# column will contain the local filenames where the data can
# be found.
inFile <- input$file1
if (is.null(inFile))
return(NULL)
read.csv(inFile$datapath)
#glimpse(inFile$datapath)
#glimpse(inFile)
})}
shinyApp(ui, server)
server <- function(input, output, session) {
output$nsc_import_summary <- renderPrint({
# input$file1 will be NULL initially. After the user selects
# and uploads a file, it will be a data frame with 'name',
# 'size', 'type', and 'datapath' columns. The 'datapath'
# column will contain the local filenames where the data can
# be found.
inFile <- input$file1
if (is.null(inFile))
return(NULL)
glimpse(inFile$datapath)
#read.csv(inFile$datapath)
#glimpse(inFile$datapath)
#glimpse(inFile)
})}
shinyApp(ui, server)
server <- function(input, output, session) {
output$nsc_import_summary <- renderPrint({
# input$file1 will be NULL initially. After the user selects
# and uploads a file, it will be a data frame with 'name',
# 'size', 'type', and 'datapath' columns. The 'datapath'
# column will contain the local filenames where the data can
# be found.
inFile <- input$file1
if (is.null(inFile))
return(NULL)
glimpse(inFile)
#read.csv(inFile$datapath)
#glimpse(inFile$datapath)
#glimpse(inFile)
})}
shinyApp(ui, server)
server <- function(input, output, session) {
output$nsc_import_summary <- renderPrint({
# input$file1 will be NULL initially. After the user selects
# and uploads a file, it will be a data frame with 'name',
# 'size', 'type', and 'datapath' columns. The 'datapath'
# column will contain the local filenames where the data can
# be found.
inFile <- input$file1
if (is.null(inFile))
return(NULL)
z <- read.csv(inFile$datapath)
glimpse(z)
#glimpse(inFile)
})}
shinyApp(ui, server)
library(tidyverse)
#library(designer)
library(shiny)
library(shinythemes)
ui <- fluidPage(
title = "NSC Retention Insights Engine",
theme = bslib::bs_theme(4),
#shinythemes::themeSelector(),  # <--- Add this somewhere in the UI
img(src='www/wentworth yellow logo.png', align = "left", height = '100px', width = '100px'),
# imageOutput(
#   outputId = "wentworth yellow logo.png"),
tabsetPanel(
#header = "NSC Retention Insights Engine",
type = "pills",
tabPanel(
title = "Disclaimer",
value = "disclaimer",
icon = icon("flag-checkered")),
img(src='www/wentworth yellow logo.png', align = "right", height = '100px', width = '100px'),
tabPanel(
title = "Description",
value = "description",
icon = icon("school")),
tabPanel(
title = "Step 1: Import Data",
value = "import_nsc_data",
icon = icon("file-import"),
inputPanel(
),
fileInput("file1", "Choose CSV File",
accept = c(
"text/csv",
"text/comma-separated-values,text/plain",
".csv")
),
tags$hr(),
#checkboxInput("header", "Header", TRUE),
#accept = c(".csv", ".xls",".xlsx")),
verbatimTextOutput("nsc_import_summary")
),
tabPanel(
title = "Step 2: Check Data",
value = "check_nsc_data",
icon = icon("check")
),
tabPanel(
title = "Step 3: See Results",
value = "see_results",
icon = icon("chart-line")
),
tabPanel(
title = "Step 4: Download Results",
value = "download_results",
icon = icon("download")
)
))
server <- function(input, output, session) {
output$nsc_import_summary <- renderPrint({
# input$file1 will be NULL initially. After the user selects
# and uploads a file, it will be a data frame with 'name',
# 'size', 'type', and 'datapath' columns. The 'datapath'
# column will contain the local filenames where the data can
# be found.
inFile <- input$file1
if (is.null(inFile))
return(NULL)
z <- read.csv(inFile$datapath)
glimpse(z)
#glimpse(inFile)
})}
#shinyAppDir(".")
#shinyApp(ui, server)
runApp("C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/GitHub/National Student Clearinghouse - Retention Engine/National-Student-Clearinghouse---Retention-Analytics")
runApp('C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/GitHub/National Student Clearinghouse - Retention Engine/National-Student-Clearinghouse---Retention-Analytics')
ui <- fluidPage(
title = "NSC Retention Insights Engine",
theme = bslib::bs_theme(4),
#shinythemes::themeSelector(),  # <--- Add this somewhere in the UI
img(src='www/wentworth yellow logo.png', align = "left", height = '100px', width = '100px'),
# imageOutput(
#   outputId = "wentworth yellow logo.png"),
tabsetPanel(
#header = "NSC Retention Insights Engine",
type = "pills",
tabPanel(
title = "Disclaimer",
value = "disclaimer",
icon = icon("flag-checkered")),
img(src='www/wentworth yellow logo.png', align = "right", height = '100px', width = '100px'),
tabPanel(
title = "Description",
value = "description",
icon = icon("school")),
tabPanel(
title = "Step 1: Import Data",
value = "import_nsc_data",
icon = icon("file-import"),
inputPanel(
),
fileInput("file1", "Choose CSV File",
accept = c(
"text/csv",
"text/comma-separated-values,text/plain",
".csv")
),
tags$hr(),
#checkboxInput("header", "Header", TRUE),
#accept = c(".csv", ".xls",".xlsx")),
verbatimTextOutput("nsc_import_summary")
),
tabPanel(
title = "Step 2: Check Data",
value = "check_nsc_data",
icon = icon("check")
),
tabPanel(
title = "Step 3: See Results",
value = "see_results",
icon = icon("chart-line")
),
tabPanel(
title = "Step 4: Download Results",
value = "download_results",
icon = icon("download")
)
))
server <- function(input, output, session) {
output$nsc_import_summary <- renderPrint({
# input$file1 will be NULL initially. After the user selects
# and uploads a file, it will be a data frame with 'name',
# 'size', 'type', and 'datapath' columns. The 'datapath'
# column will contain the local filenames where the data can
# be found.
inFile <- input$file1
if (is.null(inFile))
return(NULL)
z <- read.csv(inFile$datapath)
glimpse(z)
#glimpse(inFile)
})}
#shinyAppDir(".")
shinyApp(ui, server)
runApp('C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/GitHub/National Student Clearinghouse - Retention Engine/National-Student-Clearinghouse---Retention-Analytics')
runApp('C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/GitHub/National Student Clearinghouse - Retention Engine/National-Student-Clearinghouse---Retention-Analytics')
ui <- fluidPage(
title = "NSC Retention Insights Engine",
theme = bslib::bs_theme(4),
#shinythemes::themeSelector(),  # <--- Add this somewhere in the UI
img(src='wentworth yellow logo.png', align = "left", height = '100px', width = '100px'),
# imageOutput(
#   outputId = "wentworth yellow logo.png"),
tabsetPanel(
#header = "NSC Retention Insights Engine",
type = "pills",
tabPanel(
title = "Disclaimer",
value = "disclaimer",
icon = icon("flag-checkered")),
tabPanel(
title = "Description",
value = "description",
icon = icon("school")),
tabPanel(
title = "Step 1: Import Data",
value = "import_nsc_data",
icon = icon("file-import"),
inputPanel(
),
fileInput("file1", "Choose CSV File",
accept = c(
"text/csv",
"text/comma-separated-values,text/plain",
".csv")
),
tags$hr(),
#checkboxInput("header", "Header", TRUE),
#accept = c(".csv", ".xls",".xlsx")),
verbatimTextOutput("nsc_import_summary")
),
tabPanel(
title = "Step 2: Check Data",
value = "check_nsc_data",
icon = icon("check")
),
tabPanel(
title = "Step 3: See Results",
value = "see_results",
icon = icon("chart-line")
),
tabPanel(
title = "Step 4: Download Results",
value = "download_results",
icon = icon("download")
)
))
server <- function(input, output, session) {
output$nsc_import_summary <- renderPrint({
# input$file1 will be NULL initially. After the user selects
# and uploads a file, it will be a data frame with 'name',
# 'size', 'type', and 'datapath' columns. The 'datapath'
# column will contain the local filenames where the data can
# be found.
inFile <- input$file1
if (is.null(inFile))
return(NULL)
z <- read.csv(inFile$datapath)
glimpse(z)
#glimpse(inFile)
})}
runApp('C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/GitHub/National Student Clearinghouse - Retention Engine/National-Student-Clearinghouse---Retention-Analytics')
help(shiny::img)
ui <- fluidPage(
title = "NSC Retention Insights Engine",
theme = bslib::bs_theme(4),
#shinythemes::themeSelector(),  # <--- Add this somewhere in the UI
img(src='wentworth yellow logo.png', align = "right", height = '100px'),
# imageOutput(
#   outputId = "wentworth yellow logo.png"),
tabsetPanel(
#header = "NSC Retention Insights Engine",
type = "pills",
tabPanel(
title = "Disclaimer",
value = "disclaimer",
icon = icon("flag-checkered")),
tabPanel(
title = "Description",
value = "description",
icon = icon("school")),
tabPanel(
title = "Step 1: Import Data",
value = "import_nsc_data",
icon = icon("file-import"),
inputPanel(
),
fileInput("file1", "Choose CSV File",
accept = c(
"text/csv",
"text/comma-separated-values,text/plain",
".csv")
),
tags$hr(),
#checkboxInput("header", "Header", TRUE),
#accept = c(".csv", ".xls",".xlsx")),
verbatimTextOutput("nsc_import_summary")
),
tabPanel(
title = "Step 2: Check Data",
value = "check_nsc_data",
icon = icon("check")
),
tabPanel(
title = "Step 3: See Results",
value = "see_results",
icon = icon("chart-line")
),
tabPanel(
title = "Step 4: Download Results",
value = "download_results",
icon = icon("download")
)
))
server <- function(input, output, session) {
output$nsc_import_summary <- renderPrint({
# input$file1 will be NULL initially. After the user selects
# and uploads a file, it will be a data frame with 'name',
# 'size', 'type', and 'datapath' columns. The 'datapath'
# column will contain the local filenames where the data can
# be found.
inFile <- input$file1
if (is.null(inFile))
return(NULL)
z <- read.csv(inFile$datapath)
glimpse(z)
#glimpse(inFile)
})}
#shinyAppDir(".")
#runApp("~/shinyapp")
shinyApp(ui, server)
help(tabsetPanel)
ui <- fluidPage(
title = "NSC Retention Insights Engine",
theme = bslib::bs_theme(4),
#shinythemes::themeSelector(),  # <--- Add this somewhere in the UI
img(src='wentworth yellow logo.png', align = "right", height = '100px'),
tabsetPanel(
header = img(src='wentworth yellow logo.png', align = "right", height = '100px'),
type = "pills",
tabPanel(
title = "Disclaimer",
value = "disclaimer",
icon = icon("flag-checkered")),
tabPanel(
title = "Description",
value = "description",
icon = icon("school")),
tabPanel(
title = "Step 1: Import Data",
value = "import_nsc_data",
icon = icon("file-import"),
inputPanel(
),
fileInput("file1", "Choose CSV File",
accept = c(
"text/csv",
"text/comma-separated-values,text/plain",
".csv")
),
tags$hr(),
#checkboxInput("header", "Header", TRUE),
#accept = c(".csv", ".xls",".xlsx")),
verbatimTextOutput("nsc_import_summary")
),
tabPanel(
title = "Step 2: Check Data",
value = "check_nsc_data",
icon = icon("check")
),
tabPanel(
title = "Step 3: See Results",
value = "see_results",
icon = icon("chart-line")
),
tabPanel(
title = "Step 4: Download Results",
value = "download_results",
icon = icon("download")
)
))
server <- function(input, output, session) {
output$nsc_import_summary <- renderPrint({
# input$file1 will be NULL initially. After the user selects
# and uploads a file, it will be a data frame with 'name',
# 'size', 'type', and 'datapath' columns. The 'datapath'
# column will contain the local filenames where the data can
# be found.
inFile <- input$file1
if (is.null(inFile))
return(NULL)
z <- read.csv(inFile$datapath)
glimpse(z)
#glimpse(inFile)
})}
#shinyAppDir(".")
#runApp("~/shinyapp")
shinyApp(ui, server)
runApp('C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/GitHub/National Student Clearinghouse - Retention Engine/National-Student-Clearinghouse---Retention-Analytics')
help(tabPanel)
designer::designApp()
runApp('C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/GitHub/National Student Clearinghouse - Retention Engine/National-Student-Clearinghouse---Retention-Analytics')
designer::designApp()
runApp('C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/GitHub/National Student Clearinghouse - Retention Engine/National-Student-Clearinghouse---Retention-Analytics')
runApp('C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/GitHub/National Student Clearinghouse - Retention Engine/National-Student-Clearinghouse---Retention-Analytics')
runApp('C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/GitHub/National Student Clearinghouse - Retention Engine/National-Student-Clearinghouse---Retention-Analytics')
#shinyApp(ui, server)
designer::designApp()
runApp('C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/GitHub/National Student Clearinghouse - Retention Engine/National-Student-Clearinghouse---Retention-Analytics')
help(fluidRow)
ui <- fluidPage(
title = "NSC Retention Insights Engine",
theme = bslib::bs_theme(4),
#shinythemes::themeSelector(),  # <--- Add this somewhere in the UI
img(src='wentworth yellow logo.png', align = "right", height = '50px'),
tabsetPanel(
#header = img(src='wentworth yellow logo.png', align = "right", height = '100px'),
type = "pills",
tabPanel(
title = "Disclaimer",
value = "disclaimer",
icon = icon("flag-checkered")),
br(),
br(),
tags$p(
" ///// Welcome! More text will go here."
),
tags$ol(
tags$li(
"Welcome! More text will go here."
),
tags$li(
"dfdsf"
),
tags$li(
"sdfd"
)),
tabPanel(
title = "Description",
value = "description",
icon = icon("school")),
tabPanel(
title = "Step 1: Import Data",
value = "import_nsc_data",
icon = icon("file-import"),
inputPanel(
),
fileInput("file1", "Choose CSV File",
accept = c(
"text/csv",
"text/comma-separated-values,text/plain",
".csv")
),
tags$hr(),
#checkboxInput("header", "Header", TRUE),
#accept = c(".csv", ".xls",".xlsx")),
verbatimTextOutput("nsc_import_summary")
),
tabPanel(
title = "Step 2: Check Data",
value = "check_nsc_data",
icon = icon("check")
),
tabPanel(
title = "Step 3: See Results",
value = "see_results",
icon = icon("chart-line")
),
tabPanel(
title = "Step 4: Download Results",
value = "download_results",
icon = icon("download")
)
))
server <- function(input, output, session) {
output$nsc_import_summary <- renderPrint({
# input$file1 will be NULL initially. After the user selects
# and uploads a file, it will be a data frame with 'name',
# 'size', 'type', and 'datapath' columns. The 'datapath'
# column will contain the local filenames where the data can
# be found.
inFile <- input$file1
if (is.null(inFile))
return(NULL)
z <- read.csv(inFile$datapath)
glimpse(z)
#glimpse(inFile)
})}
runApp('C:/Users/sherrins/OneDrive - Wentworth Institute of Technology/GitHub/National Student Clearinghouse - Retention Engine/National-Student-Clearinghouse---Retention-Analytics')
